########################################## Identify Bit information of APMSSO installed ############################
- shell: "file {{ NETE_WA_ROOT }}/bin/libIntroscopePlugin.so"
  register: ASSO_BIT_INFO
- set_fact:
     ASSO_BIT: "64"
  when: "'64-bit' in ASSO_BIT_INFO.stdout"
- set_fact:
     ASSO_BIT: "32"
  when: "'32-bit' in ASSO_BIT_INFO.stdout"
##################################################################################################################
################################# Copy binary and librery files on remote machine #################################
- file:
    path: "{{ apmsso_install }}/{{ CA_APM_SSO_DIRECTORY }}"
    state: directory
    mode: 0755
- copy:
    src: "{{ playbook_dir }}/roles/apmsso_role/files/{{ CA_APM_SSO_DIRECTORY }}/{{ item }}"
    dest: "{{ apmsso_install }}/{{ CA_APM_SSO_DIRECTORY }}/"
  with_items:
      - "config"
      - "bin64"
  when: "'64-bit' in ASSO_BIT_INFO.stdout"
- copy:
    src: "{{ playbook_dir }}/roles/apmsso_role/files/{{ CA_APM_SSO_DIRECTORY }}/{{ item }}"
    dest: "{{ apmsso_install }}/{{ CA_APM_SSO_DIRECTORY }}/"
  with_items:
      - "config"
      - "bin"
  when: "'32-bit' in ASSO_BIT_INFO.stdout"
################################################################################################################
########################## Stoping apache server ########################################################
- command: "./stop_httpd.sh {{ NETE_WA_ROOT }}/ca_wa_env.sh {{ server_Path }}"
  args:
    chdir: /tmp/
  register: apachectl_stop
  failed_when: false
###############################################################################################################
########################## Bock for backup and configuration of APMSSO Agent on Remote machine ##################
- block:
    - file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      with_items:
          - "{{ apmsso_install }}/{{ CA_APM_SSO_DIRECTORY }}/backup/webagent/bin{{ ASSO_BIT }}"
          - "{{ apmsso_install }}/{{ CA_APM_SSO_DIRECTORY }}/backup/webagent/config{{ ASSO_BIT }}"
    - copy:
        src: "{{ NETE_WA_ROOT }}/bin/{{ item }}"
        dest: "{{ apmsso_install }}/{{ CA_APM_SSO_DIRECTORY }}/backup/webagent/bin{{ ASSO_BIT }}"
        remote_src: yes
        mode: 0775
      failed_when: false
      with_items:
          - libIntroscopeNativeDataAPI.so
          - libxerces-c-3.1.so
          - libapr-1.so.0
          - libboost_regex-mt.so.5
          - libicudata.so.42
          - libicuuc.so.42
          - libicui18n.so.42

    - copy:
        src: "{{ NETE_WA_ROOT }}/config/{{ item }}"
        dest: "{{ apmsso_install }}/{{ CA_APM_SSO_DIRECTORY }}/backup/webagent/config{{ ASSO_BIT }}"
        remote_src: yes
        mode: 0775
      failed_when: false
      with_items:
          - IntroscopeCAPIConfig.xml
          - SiteMinderPSdefs.xml
    - copy:
        src: "{{ server_Path }}/conf/WebAgent.conf"
        dest: "{{ apmsso_install }}/{{ CA_APM_SSO_DIRECTORY }}/backup/webagent/"
        remote_src: yes
      failed_when: false

    - copy:
        src: "{{ apmsso_install }}/{{ CA_APM_SSO_DIRECTORY }}/bin{{ ASSO_BIT }}/{{ item }}"
        dest: "{{ NETE_WA_ROOT }}/bin/"
        mode: 0775
        remote_src: yes
      with_items:
          - libIntroscopeNativeDataAPI.so
          - libxerces-c-3.1.so
          - libapr-1.so.0
          - libboost_regex-mt.so.5
          - libicudata.so.42
          - libicuuc.so.42
          - libicui18n.so.42

    - copy:
        src: "{{ apmsso_install }}/{{ CA_APM_SSO_DIRECTORY }}/config/{{ item }}"
        dest: "{{ NETE_WA_ROOT }}/config/"
        mode: 0775
        remote_src: yes
      with_items:
          - IntroscopeCAPIConfig.xml
          - SiteMinderPSdefs.xml

    - replace:
         path: "{{ NETE_WA_ROOT }}/config/IntroscopeCAPIConfig.xml"
         regexp: 'definition-file=".*."'
         replace: 'definition-file="{{ NETE_WA_ROOT }}/config/SiteMinderPSdefs.xml"'
    - replace:
         path: "{{ NETE_WA_ROOT }}/config/IntroscopeCAPIConfig.xml"
         regexp: 'name="epagent_host" value=".*."'
         replace: 'name="epagent_host" value="{{ apmia_host }}"'
    - replace:
         path: "{{ NETE_WA_ROOT }}/config/IntroscopeCAPIConfig.xml"
         regexp: 'name="epagent_httpServerPort" value=".*."'
         replace: 'name="epagent_httpServerPort" value="{{ epagent_httpServerPort }}"'
    - replace:
         path: "{{ NETE_WA_ROOT }}/config/IntroscopeCAPIConfig.xml"
         regexp: 'name="epagent_networkDataPort" value=".*."'
         replace: 'name="epagent_networkDataPort" value="{{ epagent_networkDataPort }}"'
    - replace:
         path: "{{ NETE_WA_ROOT }}/config/IntroscopeCAPIConfig.xml"
         regexp: 'name="caapmsso_log_path" value=".*."'
         replace: 'name="caapmsso_log_path" value="{{ caapmsso_log_path }}"'
    - replace:
         path: "{{ server_Path }}/conf/WebAgent.conf"
         regexp: '^#(.*libIntroscopePlugin.so.*)'
         replace: '\1'
    - lineinfile:
         path: "{{ server_Path }}/conf/WebAgent.conf"
         line: 'EnableIntroscopeAgentSupport="YES"'
         insertafter: EOF
    - lineinfile:
         path: "{{ server_Path }}/conf/WebAgent.conf"
         line: 'EnableMonitoring="YES"'
         insertafter: EOF
    - copy:
        src: "{{ playbook_dir }}/roles/apmsso_role/files/start_httpd.sh"
        dest: /tmp/
        mode: 0777
    - command: "./start_httpd.sh {{ NETE_WA_ROOT }}/ca_wa_env.sh {{ server_Path }}"
      args:
        chdir: /tmp/
      register: service_apache_status
    - file:
        state: absent
        path: "{{ item }}"
      with_items:
          - /tmp/start_httpd.sh
    - set_fact:
         report_output: {"stdout":"APM for SSO Agent is installed and configured"}
  when: apachectl_stop | succeeded
  rescue:
    - set_fact:
         report_output: {"stdout":"There is a problem in APM for SSO configuration"}
    - set_fact:
         report_output: "{{ report_output | from_json }}"
#######################################################################################################
###################################### print report if facing problem to stop policy server ###################
- set_fact:
     report_output: {"stdout":"Got problem in stoping apachectl"}
  when:  apachectl_stop | failed
- set_fact:
     report_output: "{{ report_output | from_json }}"
  when:  apachectl_stop | failed

#########################################Tasks to generate Report###################################################################
#- name: Block for Report
#  block:
#    - template:
#         src: ../template/report.j2
#         dest: "{{ playbook_dir }}/report.log"
#      delegate_to: localhost
#############################################################################################################################################
